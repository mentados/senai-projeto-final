var Preco = function (a, r) { var o = this; o.tipo = r, o.price_box = a, o.parcelaBloco = jQuery(o.price_box).find(".parcelaBloco"), o.boletoBox = jQuery(".product-shop .boletoBox, #overlay-pagamento .boletoBox"), o.descontoBoleto = parseFloat(o.boletoBox.data("desconto")), o.maximo_parcelas = jQuery(o.parcelaBloco).data("maximo_parcelas"), o.maximo_parcelas_sem_juros = jQuery(o.parcelaBloco).data("maximo_parcelas_sem_juros"), o.juros = jQuery(o.parcelaBloco).data("juros"), o.multiplos_juros = jQuery(o.parcelaBloco).data("multiplos_juros").split("|").map(Number), o.tipo_juros = jQuery(o.parcelaBloco).data("juros_tipo"), o.valor_minimo = jQuery(o.parcelaBloco).data("valor_minimo"), o.getPrecoProduto = function () { var a; return a = (a = (a = (a = jQuery(".price-box-bundle").length > 0 ? jQuery(".price-box-bundle .price").html() : jQuery(o.price_box).find(".special-price").length > 0 ? jQuery(o.price_box).find(".special-price .price").html() : jQuery(o.price_box).find(".price-as-configured").length > 0 ? jQuery(o.price_box).find(".price-as-configured .price").html() : jQuery(o.price_box).find(".regular-price .price").html()).replace("R$", "")).replace(".", "")).replace(",", "."), parseFloat(a) }, o.arredondarParcela = function (a) { var r = a.toString().match(/^-?\d+(?:\.\d{0,2})?/); return r && r[0] ? r[0] : a }, o.calcularParcelasMP_transparente = function (a) { var r = 0; valor_produto = o.getPrecoProduto(); var e = o.juros / 100; if (0 == o.tipo_juros) e = o.multiplos_juros[a - (1 + o.maximo_parcelas_sem_juros)] / 100, r = (valor_produto + valor_produto * e * a) / a; else for (i = 1; i < a + 1; i++)valor_parcela_comjuros = valor_produto * e * Math.pow(1 + e, a) / (Math.pow(1 + e, a) - 1), r = valor_parcela_comjuros; return r = r }, o.calcularParcelasMoip = function (a) { var r = 0; valor_produto = o.getPrecoProduto(); var e = o.juros / 100; if (0 == o.tipo_juros) { var t = a - 2; e = o.multiplos_juros[t] / 100, r = (valor_produto + valor_produto * e) / a } else for (i = 1; i < a + 1; i++)valor_parcela_comjuros = valor_produto * e * Math.pow(1 + e, a) / (Math.pow(1 + e, a) - 1), r = valor_parcela_comjuros; return r = r }, o.calcularParcelasPagarMe = function (a) { valor_produto = o.getPrecoProduto(); var r = o.juros / 100; return (valor_produto * r * a + valor_produto) / a }, o.arredondarTotalMP_transparente = function (a) { var r = a.toString().match(/^-?\d+(?:\.\d{0,2})?/); return r && r[0] ? r[0] : null }, o.calcularParcelasSemJuros = function (a) { return a || (a = o.calcQuantParcela() <= o.maximo_parcelas_sem_juros ? o.calcQuantParcela() : o.maximo_parcelas_sem_juros), parcelas = a, valor_produto = o.getPrecoProduto(), valorCadaParcela = valor_produto / a, valorCadaParcela }, o.calcularParcelas = function (a) { a || (a = o.calcQuantParcela()); var r = o.juros, e = r / 100; return 1 == o.tipo_juros ? valorCadaParcela = (e + 1) ** a * valor_produto / a : (r = o.multiplos_juros[a - (1 + o.maximo_parcelas_sem_juros)] / 100, valorCadaParcela = (valor_produto + valor_produto * r * a) / a), valorCadaParcela }, o.arredondarTotal = function (a) { return a = a.toFixed(2), o.arredondarTotalMP_transparente(a) }, o.calcQuantParcela = function () { valor_produto = o.getPrecoProduto(); var a = valor_produto / o.valor_minimo, r = 1; return 0 != (r = (a = Math.floor(a)) > o.maximo_parcelas ? o.maximo_parcelas : a) && NaN != r || (r = 1), r }, o.formatarMoeda = function (a) { return parseFloat(a).toLocaleString("pt-BR", { style: "currency", currency: "BRL" }) }, o.simularParcelamento = function () { valor_produto = o.getPrecoProduto(); var a = o.calcQuantParcela(), r = o.maximo_parcelas_sem_juros, e = ""; if ("coluna" != o.tipo) for (ii = 1; ii <= a; ii++) { _class = ii % 2 == 0 ? "even" : "odd", e += "<tr class='" + _class + "'>", e += "<td>" + ii + "x iguais*</td>", t = ii <= r ? o.calcularParcelasSemJuros(ii) : o.calcularParcelas(ii), valorTotalProduto = t * ii, t && (e += "<td>" + o.formatarMoeda(o.arredondarParcela(t)) + "</td>"), ii <= r ? e += "<td>sem juros</td>" : e += "<td>com juros</td>", valorTotalProduto && (e += "<td>" + o.formatarMoeda(o.arredondarTotal(valorTotalProduto)) + "</td>"), e += "<td>" + o.formatarMoeda(o.arredondarTotal(valorTotalProduto)) + "</td>", e += "</tr>" } else { for (e += "<ul class='coluna'>", ii = 1; ii <= a; ii++) { var t; e += "<li>", e += "<span class='table-color parc'> " + ii + "x </span> de", t = ii <= r ? o.calcularParcelasSemJuros(ii) : o.calcularParcelas(ii), valorTotalProduto = t * ii, e += " <span class='table-color'>" + o.formatarMoeda(o.arredondarParcela(t)) + " </span>", ii <= r ? e += "sem juros" : e += "com juros", e += "</li>", ii % Math.round(a / 2) == 0 && (e += "</ul>", ii < a && (e += '<ul class="coluna">')) } e += "</ul>" } jQuery(".table-pagamento").html(e) }, o.atualizarPriceBox = function () { if (o.calcQuantParcela() > o.maximo_parcelas_sem_juros) { if (Number.isNaN(o.calcQuantParcela())) return; var a = '<div class="parcela-comjuros">'; a += 'em até <span class="parcela" data-parcela="' + o.calcQuantParcela() + '">' + o.calcQuantParcela() + '</span><span class="xparc">x</span> de ', a += '<span class="price">' + o.formatarMoeda(o.arredondarParcela(o.calcularParcelas())) + "</span> c/ juros"; var e = a += "</div>"; jQuery(o.parcelaBloco).html(e) } else { if (Number.isNaN(o.calcQuantParcela())) return; var t = '<div class="parcela-semjuros">'; t += 'em até <span class="parcela" data-parcela="' + o.calcQuantParcela() + '">' + o.calcQuantParcela() + '</span><span class="xparc">x</span> de ', t += '<span class="price">' + o.formatarMoeda(o.arredondarParcela(o.calcularParcelasSemJuros())) + "</span> s/ juros"; e = (t += "</div>") + (a = ""); jQuery(o.parcelaBloco).html(e) } if (o.boletoBox.length > 0 && o.descontoBoleto > 0) { var i = o.descontoBoleto, l = o.getPrecoProduto(); jQuery(o.boletoBox).find(".price").html(o.formatarMoeda(o.arredondarTotal(l * (1 - i)))), jQuery(o.boletoBox).find(".descontoBoleto").html(Math.round(100 * i)) } else o.boletoBox.css("display", "none"); o.simularParcelamento(r) } }; function imgActive() { var a = jQuery(".more-views a"); a.on("click", function () { a.removeClass("active"), jQuery(this).addClass("active") }) } jQuery(document).ready(function () { var a = jQuery(".product-shop .price-box"); if (a.length) { var r = new Preco(a, "coluna"); r.atualizarPriceBox(), jQuery(".product-options select , .product-options input").change(function (a) { r.atualizarPriceBox() }) } var o = jQuery("#galeria"); if (o.length > 0) { var e = o.attr("class").split("-")[1]; jQuery(".product-view .more-views, .product-view .product-image").addClass(e); var t = !1; "vertical" == e && (t = !0); var i = jQuery(".media-" + e); jQuery(i).slick({ vertical: t, verticalSwiping: t, infinite: !1, slidesToShow: 5, slidesToScroll: 1, swipeToSlide: !0, responsive: [{ breakpoint: 1e3, settings: { slidesToShow: 4 } }, { breakpoint: 400, settings: { slidesToShow: 2 } }, { breakpoint: 0, settings: { slidesToShow: 1 } }] }) } jQuery("#atributos-principal .cores-lista-atributos li a").on("mousedown", function () { for (var a = jQuery(".slick-track").find("div").length - 1; a > -1;)jQuery(i).slick("slickRemove", a), a--; var r = "#cores" + jQuery(this).data("valor"); jQuery(r).find(".media-cores").find("div").each(function () { var a = jQuery(this).clone(); jQuery(i).slick("slickAdd", a) }), imgActive() }), jQuery(".zoom-out a.ampliar-zoom").on("click", function () { var a = jQuery("a#zoom1").attr("href"), r = jQuery('.lista-fancybox  a[data-compare="' + a + '"]'); return jQuery(r[0]).trigger("click"), !1 }), jQuery("ul.list1 a").fancybox({ prevEffect: "fade", nextEffect: "fade", openEffect: "elastic", closeEffect: "none", padding: 0, closeBtn: !0, helpers: { title: { type: "inside" }, buttons: {} } }), jQuery(".ancora-avaliacoes").click(function () { if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) { var a = jQuery(this.hash); if ((a = a.length ? a : jQuery("[name=" + this.hash.slice(1) + "]")).length) return jQuery("html, body").animate({ scrollTop: a.offset().top }, 1e3), !1 } }), jQuery("#qty").inputCtl({ minVal: 1, maxVal: 99999, step: 1 }), imgActive() }); var productAddToCartForm = new VarienForm("product_addtocart_form"); productAddToCartForm.submit = function (a, r) { if (this.validator.validate()) { var o = this.form, e = o.action; r && (o.action = r); try { this.form.submit() } catch (a) { } this.form.action = e, a && "undefined" != a && (a.disabled = !0) } }.bind(productAddToCartForm), productAddToCartForm.submitLight = function (a, r) { if (this.validator) { var o = Validation.methods; delete Validation.methods["required-entry"], delete Validation.methods["validate-one-required"], delete Validation.methods["validate-one-required-by-name"], this.validator.validate() && (r && (this.form.action = r), this.form.submit()), Object.extend(Validation.methods, o) } }.bind(productAddToCartForm); var productAddToCartFormAjax = new VarienForm("product_addtocart_form"); productAddToCartFormAjax.submit = function (a, r) { if (this.validator.validate()) { var o = this.form, e = o.action; r && (o.action = r); r || (r = jQuery("#product_addtocart_form").attr("action")), r = r.replace("checkout/cart/add", "ajax/index/add"); var t = jQuery("#product_addtocart_form").serialize(); t += "&isAjax=1"; try { jQuery.ajax({ url: r + "/ajax/index/add/", type: "get", data: t, dataType: "json", beforeSend: function () { setAjaxLoading() }, success: function (a) { "SUCCESS" == a.status ? setAjaxData(a, !0, 0) : setAjaxError(a, 0) } }) } catch (a) { } this.form.action = e } }.bind(productAddToCartFormAjax), productAddToCartFormAjax.submitLight = function (a, r) { if (this.validator) { var o = Validation.methods; delete Validation.methods["required-entry"], delete Validation.methods["validate-one-required"], delete Validation.methods["validate-one-required-by-name"], this.validator.validate() && (r && (this.form.action = r), this.form.submit()), Object.extend(Validation.methods, o) } }.bind(productAddToCartFormAjax), jQuery(".add-carrinho-view").attr("onclick", "").unbind("click"), jQuery(".add-carrinho-view").click(function (a) { campos = jQuery(".campos_atributo"), validar = !0; var r = ""; campos.each(function (a) { codigo = jQuery(this).attr("data-campocode"), "" == jQuery(this).val() && (r += "Por favor, selecione um(a) " + jQuery(this).attr("data-campolabel") + "\n", validar = !1) }), validar ? productAddToCartFormAjax.submit(this) : swal({ title: "Ops...", type: "info", text: r, html: !0 }), a.preventDefault() });